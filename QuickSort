#include <stdio.h>

void swap(int* x, int* y) {
    int temp = *x;
    *x = *y;
    *y = temp;
}

int partition(int arr[], int l, int h) {
    
    int pivot = arr[h];
    int i = (l - 1);
    
    for (int j=l; j <= h-1; j++) {
        
        if (arr[j] < pivot) {
            i++;
            swap(&arr[i], &arr[j]);
        }
    }
    
    swap(&arr[i+1], &arr[h]);
    return (i+1);
}


void quickSort(int arr[], int l, int h) {
    
    if (l < h) {
        
        int pi = partition(arr, l, h);
        
        quickSort(arr, l, pi - 1);
        quickSort(arr, pi+1, h);
     
    }
}

void printArr(int arr[], int len) {
    
    int i;
    
    for (i = 0; i < len; i++) {
        printf("%d ", arr[i]);
    }

     printf("\n");
}

int main() {
    
    int arr[] = {2,6,5,3,8,7,1,0};
    int len = sizeof(arr)/sizeof(arr[0]);
    
    quickSort(arr, 0, len-1);
    
    printArr(arr, len);

    return 0;
}
